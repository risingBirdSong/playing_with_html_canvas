{"version":3,"sources":["circle.ts","colors.ts","manycircles.ts"],"names":[],"mappings":";;;;;ACAW,ACAX,ODAW,ACAJ,CDAI,ACAH,GAAR,CAAY,CDAD,GAAQ,CAAC,ICApB,KDAmB,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAR;ADCX,ACAW,IDAX,GCAW,CAAA,EDAX,GCAW,GAAQ,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,CAAR;ADAX,AEAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AFAA,YAAA;AAQI,AEPJ,IAAA,OFOI,CEPJ,GAAA,EFOI,CAAmB,IEPvB,CAAA,CFOI,EAAsD,OAAtD,AEPJ,CAAA,CFO8F,KAA1F,EAAwG;AAArF,SAAA,MAAA,GAAA,MAAA;AAAmC,AEJ1D,IAAI,KFIsD,CEJhD,GAAuB,GFIyB,GAAA,EEJjB,CAAC,IFIgB,SEJzB,CAAuB,QAAvB,CAAjC;AFHW,AEIX,IAAM,KFJK,CAAA,CEIE,EFJW,CEImB,GFJf,CAAC,EEIoB,CAAC,GFJ1B,KAAgB,EEIG,CAAkB,EFJhB,EEIF,CAA3C,GFJwC,CAAY,KAAzC;AACA,AEKX,MAAM,CAAC,EFLI,CAAA,EEKX,CFLwB,EEKT,EFLa,CAAC,GEKR,CAAC,EFLE,KAAgB,GEKxC,EFL6C,MAAL,CAAY,MAAzC;AACA,AEKX,MAAM,CAAC,EFLI,IEKX,EFLW,CEKK,EFLc,IAAI,AEKZ,CFLa,AEKZ,MFLO,KAAgB,AEK9C,CFL6B,CEO7B,EFPmD,CAAxC;AACA,AEOX,SFPW,KAAA,GAAiB,CAAjB;AACA,AEOX,SFPW,GAAA,GAAe,IAAI,CAAC,EAAL,GAAU,CAAzB;AAKH,AEGR,IFHQ,OAAO,CAAC,SAAR;AACA,AEIR,IFJQ,OAAO,CAAC,GAAR,CAAY,KAAK,CAAjB,EAAoB,KAAK,CAAzB,EAA4B,KAAK,MAAjC,EAAyC,CAAzC,EAA4C,IAAI,CAAC,EAAL,GAAU,CAAtD;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,AEIR,IFJQ,AEIF,OFJS,CAAC,EEIA,GAAc,EAA9B,EFJQ,GAAoB,KAApB;AACA,AEKR,IFLQ,AEKJ,IAAI,GFLO,AEKJ,CFLK,IAAR,GEKG,CAAA,KAAX;AFJQ,IAAA,OAAO,CAAC,SAAR;AAEH,AEIL,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAkC;AAC9B,EAAA,UAAU,CAAC,IAAX,CAAgB,IAAI,QAAA,CAAA,MAAJ,CAAW,MAAX,EAAmB,OAAnB,EAA4B,IAAI,CAAC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,IAAI,CAAC,MAA9B,CAAD,CAAhC,CAAhB;AFJJ,AEKC,EAED,OFPA,MAAA;AAlBA,CAAA,EAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA","file":"manycircles.6d82dd49.js","sourceRoot":"..\\manyCircles","sourcesContent":["\r\nexport class Circle{\r\n    public x : number = Math.random() * this.canvas.width;\r\n    public y : number = Math.random() * this.canvas.height;\r\n    public radius : number = (Math.random() * 3) + 2;\r\n    public begin : number = 0;\r\n    public end : number = Math.PI * 2;\r\n\r\n\r\n    constructor(public canvas : HTMLCanvasElement, public context : CanvasRenderingContext2D, color : string){\r\n\r\n        context.beginPath();\r\n        context.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n        console.log(color);\r\n        context.fillStyle = color;\r\n        context.fill();\r\n        context.closePath();\r\n\r\n    }\r\n}   ","export let clrsA = [\"#CD88AF\", \"#AA5585\", \"#882D61\", \"#661141\", \"#440027\"];\r\nexport let clrsB = [\"#F8A6AC\",\"#CF676F\",\"#A6373F\",\"#7C151C\",\"#530006\",] ;","console.log(\"testing\");\r\nimport {Circle} from \"./circle\";\r\nimport {clrsA, clrsB} from \"./colors\";\r\n\r\n\r\nlet canvas : HTMLCanvasElement = document.querySelector(\"canvas\") as HTMLCanvasElement;\r\nconst context : CanvasRenderingContext2D = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\n\r\n// context.beginPath();\r\n// context.arc(canvas.width / 2, canvas.height / 2, 30, 0, Math.PI * 2);\r\n// context.fillStyle = \"red\";\r\n// context.fill();\r\n\r\n// let circle = new Circle(canvas, context);\r\n\r\nconst allCircles : Circle[] = [];\r\n\r\nlet clrs = clrsB;\r\n\r\nfor (let i = 0; i < 100000; i ++) {\r\n    allCircles.push(new Circle(canvas, context, clrs[Math.floor(Math.random()*clrs.length)]));\r\n}\r\n\r\n// context.stroke();\r\n"]}