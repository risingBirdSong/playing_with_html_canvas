{"version":3,"sources":["circle.ts","colors.ts","manycircles.ts"],"names":[],"mappings":"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","file":"manycircles.6d82dd49.js","sourceRoot":"..\\manyCircles","sourcesContent":["import { doExpression } from \"@babel/types\";\r\n\r\nexport class Circle {\r\n\r\n    public canvas: HTMLCanvasElement\r\n    public context: CanvasRenderingContext2D\r\n\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public dx: number;\r\n    public dy: number;\r\n\r\n    public radius: number = (Math.random() * 10) + 2;\r\n    public begin: number = 0;\r\n    public end: number = Math.PI * 2;\r\n\r\n\r\n    constructor(public cnvs: HTMLCanvasElement, public ctx: CanvasRenderingContext2D, public color: string) {\r\n\r\n        this.canvas = cnvs;\r\n        this.context = ctx;\r\n\r\n        this.x = Math.random() * this.canvas.width;\r\n        this.y = Math.random() * this.canvas.height;\r\n\r\n        this.dx = Math.random();\r\n        this.dy = Math.random();\r\n    }\r\n\r\n    public draw = () => {\r\n        this.context.beginPath();\r\n        this.context.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n        this.context.fillStyle = this.color;\r\n        this.context.fill();\r\n        this.context.closePath();\r\n    }\r\n\r\n\r\n    public update = () => {\r\n\r\n        this.x += this.dx;\r\n        this.y += this.dy;\r\n\r\n        if (this.x + this.radius > window.innerWidth || this.x - this.radius < 0) {\r\n            this.dx = -this.dx;\r\n        }\r\n        if (this.y + this.radius > window.innerHeight || this.y - this.radius < 0) {\r\n            this.dy = -this.dy;\r\n        }\r\n\r\n        this.draw();\r\n    }\r\n\r\n    public animate = () => {\r\n\r\n\r\n\r\n        // this.context.clearRect(0,0, innerWidth, innerHeight);\r\n    }\r\n}   ","export let clrsA = [\"#CD88AF\", \"#AA5585\", \"#882D61\", \"#661141\", \"#440027\"];\r\nexport let clrsB = [\"#F8A6AC\",\"#CF676F\",\"#A6373F\",\"#7C151C\",\"#530006\",] ;\r\nexport let clrsC = [\"#FFD1AA\",\"#D49A6A\",\"#AA6C39\",\"#804515\",\"#552600\",] ;\r\nexport let clrsD = [\"#7BB992\",\"#4D9A6A\",\"#297B48\",\"#0F5D2C\",\"#003E17\",] ;\r\nexport let clrsE = [\"#7F81B1\",\"#545894\",\"#333676\",\"#191C59\",\"#080B3B\",] ;","console.log(\"testing\");\r\nimport {Circle} from \"./circle\";\r\nimport {clrsA, clrsB, clrsC, clrsD,clrsE} from \"./colors\";\r\n\r\n\r\nlet canvas : HTMLCanvasElement = document.querySelector(\"canvas\") as HTMLCanvasElement;\r\nconst context : CanvasRenderingContext2D = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\n\r\n// context.beginPath();\r\n// context.arc(canvas.width / 2, canvas.height / 2, 30, 0, Math.PI * 2);\r\n// context.fillStyle = \"red\";\r\n// context.fill();\r\n\r\n// let circle = new Circle(canvas, context);\r\n\r\nlet allCircles : Circle[] = [];\r\n\r\nlet clrs = clrsA;\r\n\r\n\r\n\r\nfor (let i = 0; i < 1000; i ++) {\r\n    allCircles.push(new Circle(canvas, context, clrs[Math.floor(Math.random()*clrs.length)]));\r\n}\r\nlet testCircle = new Circle(canvas, context, clrsA[0]);\r\ntestCircle.draw();\r\n\r\nfunction animate(){\r\n    requestAnimationFrame(animate);\r\n    context.clearRect(0,0,window.innerWidth,window.innerHeight);\r\n   for (let c of allCircles) {\r\n        c.update();\r\n   }\r\n}\r\n\r\nanimate();\r\n\r\n// context.stroke();\r\n"]}